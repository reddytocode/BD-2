# Generated by Django 5.2.7 on 2025-10-13 19:25

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoriaClinica",
            fields=[
                ("id_historia", models.AutoField(primary_key=True, serialize=False)),
                (
                    "fecha_ingreso",
                    models.DateTimeField(verbose_name="Fecha de Ingreso"),
                ),
                (
                    "fecha_alta",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha de Alta"
                    ),
                ),
                (
                    "motivo_consulta",
                    models.TextField(verbose_name="Motivo de Consulta"),
                ),
                (
                    "diagnostico",
                    models.TextField(blank=True, null=True, verbose_name="Diagnóstico"),
                ),
                (
                    "observaciones",
                    models.TextField(
                        blank=True, null=True, verbose_name="Observaciones"
                    ),
                ),
            ],
            options={
                "verbose_name": "Historia Clínica",
                "verbose_name_plural": "Historias Clínicas",
                "db_table": "historia_clinica",
            },
        ),
        migrations.CreateModel(
            name="Servicio",
            fields=[
                ("id_servicio", models.AutoField(primary_key=True, serialize=False)),
                (
                    "nombre_servicio",
                    models.CharField(
                        max_length=200, verbose_name="Nombre del Servicio"
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(blank=True, null=True, verbose_name="Descripción"),
                ),
                ("activo", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
            ],
            options={
                "verbose_name": "Servicio",
                "verbose_name_plural": "Servicios",
                "db_table": "servicio",
            },
        ),
        migrations.CreateModel(
            name="UsuarioSistema",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "rol",
                    models.CharField(
                        choices=[
                            ("Administrador", "Administrador"),
                            ("Medico", "Médico"),
                            ("Enfermeria", "Enfermería"),
                            ("Paciente", "Paciente"),
                        ],
                        max_length=20,
                        verbose_name="Rol",
                    ),
                ),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuario del Sistema",
                "verbose_name_plural": "Usuarios del Sistema",
                "db_table": "usuario_sistema",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="OrdenMedica",
            fields=[
                ("id_orden", models.AutoField(primary_key=True, serialize=False)),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("laboratorio", "Laboratorio"),
                            ("imagenologia", "Imagenología"),
                            ("interconsulta", "Interconsulta"),
                            ("medicamento", "Medicamento"),
                            ("procedimiento", "Procedimiento"),
                        ],
                        max_length=20,
                        verbose_name="Tipo de Orden",
                    ),
                ),
                ("descripcion", models.TextField(verbose_name="Descripción")),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("pendiente", "Pendiente"),
                            ("en_proceso", "En Proceso"),
                            ("completada", "Completada"),
                            ("cancelada", "Cancelada"),
                        ],
                        default="pendiente",
                        max_length=20,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "fecha_emision",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Emisión"
                    ),
                ),
                (
                    "id_episodio",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.historiaclinica",
                        verbose_name="Episodio Clínico",
                    ),
                ),
            ],
            options={
                "verbose_name": "Orden Médica",
                "verbose_name_plural": "Órdenes Médicas",
                "db_table": "orden_medica",
                "ordering": ["-fecha_emision"],
            },
        ),
        migrations.CreateModel(
            name="Paciente",
            fields=[
                ("id_paciente", models.AutoField(primary_key=True, serialize=False)),
                (
                    "ci",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="Cédula de Identidad"
                    ),
                ),
                ("nombres", models.CharField(max_length=100, verbose_name="Nombres")),
                (
                    "apellidos",
                    models.CharField(max_length=100, verbose_name="Apellidos"),
                ),
                (
                    "fecha_nacimiento",
                    models.DateField(verbose_name="Fecha de Nacimiento"),
                ),
                (
                    "sexo",
                    models.CharField(
                        choices=[("M", "Masculino"), ("F", "Femenino"), ("O", "Otro")],
                        max_length=1,
                        verbose_name="Sexo",
                    ),
                ),
                ("direccion", models.TextField(verbose_name="Dirección")),
                ("telefono", models.CharField(max_length=20, verbose_name="Teléfono")),
                (
                    "correo",
                    models.EmailField(
                        max_length=254, verbose_name="Correo Electrónico"
                    ),
                ),
                (
                    "id_usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuario del Sistema",
                    ),
                ),
            ],
            options={
                "verbose_name": "Paciente",
                "verbose_name_plural": "Pacientes",
                "db_table": "paciente",
            },
        ),
        migrations.AddField(
            model_name="historiaclinica",
            name="id_paciente",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="accounts.paciente",
                verbose_name="Paciente",
            ),
        ),
        migrations.CreateModel(
            name="PersonalSalud",
            fields=[
                ("id_profesional", models.AutoField(primary_key=True, serialize=False)),
                ("nombres", models.CharField(max_length=100, verbose_name="Nombres")),
                (
                    "apellidos",
                    models.CharField(max_length=100, verbose_name="Apellidos"),
                ),
                (
                    "especialidad",
                    models.CharField(max_length=100, verbose_name="Especialidad"),
                ),
                (
                    "matricula",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Matrícula"
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("Doctor", "Doctor"),
                            ("Administrativo", "Administrativo"),
                            ("Enfermera", "Enfermera"),
                            ("Laboratorista", "Laboratorista"),
                        ],
                        max_length=20,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "id_usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuario del Sistema",
                    ),
                ),
            ],
            options={
                "verbose_name": "Personal de Salud",
                "verbose_name_plural": "Personal de Salud",
                "db_table": "personal_salud",
            },
        ),
        migrations.AddField(
            model_name="historiaclinica",
            name="id_profesional",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="accounts.personalsalud",
                verbose_name="Profesional de Salud",
            ),
        ),
        migrations.CreateModel(
            name="EvolucionClinica",
            fields=[
                ("id_evolucion", models.AutoField(primary_key=True, serialize=False)),
                (
                    "fecha_registro",
                    models.DateTimeField(verbose_name="Fecha de Registro"),
                ),
                ("descripcion", models.TextField(verbose_name="Descripción")),
                (
                    "id_episodio",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.historiaclinica",
                        verbose_name="Episodio Clínico",
                    ),
                ),
                (
                    "id_profesional",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.personalsalud",
                        verbose_name="Profesional de Salud",
                    ),
                ),
            ],
            options={
                "verbose_name": "Evolución Clínica",
                "verbose_name_plural": "Evoluciones Clínicas",
                "db_table": "evolucion_clinica",
                "ordering": ["-fecha_registro"],
            },
        ),
        migrations.CreateModel(
            name="ResultadoClinico",
            fields=[
                ("id_resultado", models.AutoField(primary_key=True, serialize=False)),
                (
                    "fecha_resultado",
                    models.DateTimeField(verbose_name="Fecha del Resultado"),
                ),
                ("descripcion", models.TextField(verbose_name="Descripción")),
                (
                    "documento",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="resultados_clinicos/",
                        verbose_name="Documento",
                    ),
                ),
                (
                    "id_orden",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.ordenmedica",
                        verbose_name="Orden Médica",
                    ),
                ),
            ],
            options={
                "verbose_name": "Resultado Clínico",
                "verbose_name_plural": "Resultados Clínicos",
                "db_table": "resultado_clinico",
                "ordering": ["-fecha_resultado"],
            },
        ),
        migrations.AddField(
            model_name="historiaclinica",
            name="id_servicio",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="accounts.servicio",
                verbose_name="Servicio",
            ),
        ),
        migrations.CreateModel(
            name="AtencionMedica",
            fields=[
                ("id_atencion", models.AutoField(primary_key=True, serialize=False)),
                ("fecha_inicio", models.DateTimeField(verbose_name="Fecha de Inicio")),
                (
                    "fecha_fin",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha de Fin"
                    ),
                ),
                (
                    "motivo_consulta",
                    models.TextField(verbose_name="Motivo de Consulta"),
                ),
                (
                    "diagnostico",
                    models.TextField(blank=True, null=True, verbose_name="Diagnóstico"),
                ),
                (
                    "id_paciente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.paciente",
                        verbose_name="Paciente",
                    ),
                ),
                (
                    "id_profesional",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.personalsalud",
                        verbose_name="Profesional de Salud",
                    ),
                ),
                (
                    "id_servicio",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.servicio",
                        verbose_name="Servicio",
                    ),
                ),
            ],
            options={
                "verbose_name": "Atención Médica",
                "verbose_name_plural": "Atenciones Médicas",
                "db_table": "atencion_medica",
            },
        ),
    ]
